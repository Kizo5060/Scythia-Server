package com.ruseps.world.content.loot_display;

import java.util.HashMap;
import java.util.Map;

public enum RewardsData {
	
	VOTEBOX(1, new int[] {915, 19670, 18057, 19992, 10942, 21013, 2752, 13016, 10934, 21055, 18060, 21056 } , "Vote Mystery Box"),
	
	NexArchBOX(2, new int[] {20120, 20122, 20124, 7080, 19920, 20126, 20128, 20130, 20132, 20134, 20136, 18852, 18854, 18856, 18858, 18860, 18864, 20106, 20108, 20110, 20112,
			20114, 20116, 20150, 20154, 20156, 20158, 20160, 20162, 18990, 18992, 18994, 18998, 19000, 19980, 6657, 6659, 6661, 6663, 18920, 18936, 
			18950, 18448, 18446, 18942, 18910, 20521, 13045, 18350, 14460, 14462, 14464, 18896, 18898, 18900, 8788, 18444, 18912, 18944, 13047, 8421, 5079, 5080, 5081, 19918, 
			11005, 10480, 19921, 10503, 11654,10682, 10683, 10684, 10685, 20522, 11653, 11659, 11147, 11148, 11149, 11650, 7081, 11039, 11040, 11041, 11042, 11004, 15485, 
			20134, 940, 10991, 20128, 10992, 10993, 10994, 10995, 10480, 10822, 10824, 10826, 11206, 11208, 7082, 20100, 20102, 20104, 11896, 20658, 20659, 20660, 20140, 20142, 
			20144, 20146, 10502, 11661, 11662, 11679, 11680, 11681, 11682, 20656, 11658, 5090, 5091, 5092, 20650, 20651, 20652, 20653, 20654, 
			938, 937, 5085, 5086, 5087, 5088, 5089, 10942, 18057 } , "NexArch's Mbox"),
	
	PETBOX (3, new int [] {11981, 11982, 11983, 18986,11984, 11985, 11986, 18989, 11987, 11988, 11989, 18985, 11990, 11991, 11992, 
			 11993, 18987, 11896, 11979, 11994, 11997, 18984, 12655, 13247, 11995, 11996, 19868, 2703, 11949, 1685, 2542, 2546, 
			 11978, 12004 }, "Pet Box"),
	
	GOODIEBAG(4, new int[] { 20120, 19913, 20124, 20122, 20132, 20130, 17291, 941, 944, 20106, 20108, 20110, 20116, 20114, 20112, 19918, 19919, 18854, 18860, 18864, 18858, 18868,
			18852, 18856, 18900, 18898, 14462, 18896, 14460, 20146, 20134, 20128, 998, 997, 5081, 5079, 5080, 10480, 11662, 11679, 11661, 5082, 5083, 5084, 10482, 19908, 19909, 19910,
			20657, 11005, 18440, 18914, 18946, 19972, 19976, 19978, 19974, 19970, 19962, 19964, 19958, 19956, 19960, 19868, 20100, 20104, 20102, 18944, 18912, 18444, 965, 19994, 11896,
			964, 10504, 11071, 11068, 11067, 11078, 11087, 11142, 11144, 11142, 11146, 11145, 20519,20520, 1005, 20522, 1031, 1033, 1035, 996, 1000, 8666, 938, 10943 } , "Goodie Bag"),
	
	LEGENDARYB(5, new int[] {941, 944, 18852, 18854, 18856, 18858, 18860, 18864, 18868, 20106, 20110, 20112, 20114, 20116, //Uncommon, 0
			20134, 20136, 20138, 20140, 20142, 10502, 14018, 20150, 20154, 20156, 20158, 20160, //Rare, 1
			18900, 18896, 18898, 14460, 14462, 10822, 11208, 10824, 11206, 10826, //Epic, 2
			11005, 20657 } , "Legenday MBox"),
	
	NexArchSPECIAL(6, new int[] { 8656, 8657, 8658, 8659, 8863, 8864, 8865,11661, 11662, 11679, 11680, 11681, 11682, 20656, 11658, //Common, 0
			938, 937, 19098, 19099, 19100, 798, 799, 894, 895, 896, 5090, 5091, 5092, 20650, 20651, 20652,
			19067, 19068, 19069, 19070, 19071, 19072, 20653, 20654, 938, 937, 5085, 5086, 5087, 5088, 5089, 8518,
			19048, 19049, 19050, 19051, 19052, 19053, 19054, 19055, 940, 10991, 10992, 10993, 10994, 10995, 10480, 10822, 
			19056, 19057, 19058, 19059, 19060, 19061, 19062, 10942, 18062, 18059,
			19082, 19080, 19084, 21023, 21024, 21025, 21026, 21027, 21028,
			21056, 19085, 21004, 21005, 21006,  10824, 10826, 11206, 11208, 10934, 10935} , "NexArch Special MBox"),	
	
	OWNERBOX(7, new int[] { 11067, 11068, 11071, 11078, 11087, 1007, 1002, 1005, 965, 1000,//Common, 0
			902, 903, 904, 905, 906, 15246, 897, 898, 899, 900, 901, 21027, 21018, 21019, 21020, 21021, 21022,
			18440, 18914, 18946, 20527, 20528, 20529, 15246, 21034, 21000, 21001, 21002, 21003,
			2544, 2546, 2547, 2548, 2549,21048, 21049, 21050, 21051, 21052, 21053, 21054,
			18968, 18969, 18970, 18971, 18972, 18973, 21040, 21041, 21042, 21043, 21044, 21045, 21046, 2104,
			405, 18982, 18983, 18993, 19021, 2545, 18974, 18975, 18976, 10935, 10934, 18061, 19671, 18062, 10943, 21038,
			6832, 7960, 21056, 6831, 2542, 6830, 18977, 18978, 18979, 19014, 19015, 21035, 1413, 19671}  , "Owner MBox"),
	
	OWNER_CHEST(8, new int[] { 18338, 915, 18057, 10942, 18058, 18689, 18958, 8655, 8654, 10902,
			10900, 10901, 2746, 21043, 12601, 3499, 3502, 6855, 6856, 12502, 13016, 6199, 10934, 19111, 18060, 13035, 
			13034, 8676, 8668, 3523, 19077, 2732, 10867, 10869, 19908, 19909, 6853, 12279, 12278, 21056, 21055, 19002, 
			19003, 18061, 18960, 2996, 18063, 10935, 1413, 2786, 2805,
			2804, 2800, 19039, 3525, 10537, 2746, 13034} ,"Owner Chest"),
	
	SLAYER_CHEST(9, new int[] { 19087, 19088, 19089, 19090, 19091, 19092, 6830, 2709, 15492, 19092, 915, 935, 1053, 14471, 15246, 
			9850, 7960, 6832, 2856, 2857, 17662, 17666, 2769, 2753, 3491, 18057, 6828, 2858, 2869, 2859, 13024, 13025, 3526, 
			3525, 13327, 1002, 13029, 8467, 8465, 18058 } ,"Slayer Chest"), 
	
	SAYIAN_RAIDS(10, new int[] {19994,2572, 19960,19962,19956,19958,19964, // 1:333 chance
			19970,19972,19974,19978,19976,19868 },"Sayain Raids"),
	
	POKE_RAIDS(11, new int[] {19098, 19100, 19099, 19093, 19096, 1002, 938, 19097,
			20650, 20651, 20652, 20653, 20654, 20658, 20659, 20660, 8871, 8860, 8861, 8862, 999, 15501, 
			18986, 11659, 7080, 5585},"Poke Raids"),
	
	ANIME_RAIDS(12, new int[] { 21000, 21001, 21002, 21003, 21034, 1002, 21016, 21017, 21018, 21019, 21020, 21021, 21022,
			21029, 21030, 21031, 21032, 21033, 21026, 21004, 21005, 21006,
			21023, 21024, 21025, 21027, 21028, 21007, 21008, 21009, 21010, 21011, 21012,
			19098, 19100, 19099, 19093, 19096, 938, 19097, 915},"Anime Raids"),
	
	MORTAL_RAIDS(13, new int[] {21048, 21049, 21050, 21051, 21052, 21053, 21054, 2749, 2751, 2753, 2756, 2754, 2755,
			2773, 2775, 2777, 2779, 2781, 2784, 2787,
			2768, 2769, 2770, 2771, 2772, 2789, 17658, 17654,
			11896, 21057, 21058, 21059, 21060, 21061, 21062, 21063, 21064},"Mortal Raids"),
	
	DARKDIMENSION_RAIDS(14, new int[] {2849, 2850, 3492, 3491, 2854, 17652, 18966, 7020, 7024, 7022, 7026, 19077, 20524, 20532, 
			20525, 20517, 20518, 4080, 7010, 7014, 7012, 7018, 7016, 2732, 621, 1025, 1023, 
			19045, 19041, 19093, 19096, 19097, 12003 },"Dark Dimension Raid"),
		
	SILVER_RAIDS(15, new int[] { 19106, 19107, 19117, 19118, 19119, 19120, 19121, 19122,
     1031, 1033, 1035, 11896, 21057, 21058, 21059, 21060, 21061, 21062, 21063, 21064,
     19110, 19112, 19113, 19114, 19115, 19103, 19104, 19105, 19108, 19109, },"Silver Raids"), 
	
	GOLD_RAIDS(16, new int[] { 14446, 2749, 2751, 2753, 2756, 2754, 2755,
			2765, 2766, 2767, 2773, 2775, 2777, 2779, 2781, 2784, 2787,
			2759, 2760, 2761, 2762, 2764, 2768, 2769, 2770, 2771, 2772, 2789 },"Gold Raids"), 
	
	PLAT_RAIDS(17, new int[] { 14445, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 
			3490, 3491, 3492, 3494, 3493, 18948, 2679, 18966, 17652, 17664,
			18943, 18947, 18949, 18941, 18951, 18952, 18953, 18955, 18956, 18939, 621 },"Plat Raids"),
	
	DIAMOND_RAIDS(18, new int[] {3495, 3505, 3506, 3507, 3508, 3509, 19040, 19041, 19042, 19043, 19044, 19046, 17656, 17662,
			19045, 19047, 3499, 3500, 3501, 3502, 3503, 3504, 3498, 3497, 21043, 21045, 21044, 21042, 21041, 13021, 10942}, "Diamond Raids"),
	
	RUBY_RAIDS(19, new int[] {14443, 13033, 13032, 8668, 8672, 8674, 9077, 17666, 13035,13034, 13030, 13031, 8676, 
			8680, 8678, 8670, 3510, 17668, 17660, 10537, 19992, 10942, 18057,},"Ruby Raids"),
	
	DRAGONSTONE_RAIDS(20, new int[] {14444, 18975, 19059, 1046, 13193, 10900, 10902, 10901, 2727, 2729, 10942, 10946,
			10416, 10418, 19078, 19012, 7083, 2724, 2725, 2726, 10906, 18906, 17484, 18653, 3470, 19994 },"Dragonstone Raid"),
	
	BARROWS_CHEST(21, new int [] {12001, 4740, 19992, 19994, 8788, 4708, 4710, 4712, 4714, 4716, 4718, 4720,
			 4722, 4724, 4726, 4728, 4730, 4732, 4734, 4736, 4738, 4745, 4747, 4749, 4751, 4753, 
			 4755, 4757, 4759, 11846, 11848, 11850, 11852, 11854, 11856}, "Barrows Chest"),
	
	BRONZE_BOX(22,new int[] { 19098, 19100, 19099, 19093, 19096, 938, 19097, 915,
	21023, 21024, 21025, 21027, 21028, 21007, 21008, 21009, 21010, 21011, 21012,21029, 21030, 21031, 21032, 21033, 21026, 21004, 21005, 21006,
	19918, 11005, 10480, 19921, 10503, 11654,21000, 21001, 21002, 21003, 21016, 21017, 21018, 21019, 21020, 21021,
	19103, 19104, 19105, 19108, 19109, 19110, 19112, 19113, 19114, 19115,10942,6856,18958},"Bronze NexArch Box"),
	
	SILVER_BOX(23,new int[]	{ 1031, 1033, 1035, 11896, 21057, 21058, 21059, 21060, 21061, 21062, 21063, 21064,
	19106, 19107, 19117, 19118, 19119, 19120, 19121, 19122,21029, 21030, 21031, 21032, 21033, 21026, 21004, 21005, 21006,
	21057, 21058, 21059, 21060, 21061, 21062, 21063, 21064,2768, 2769, 2770, 2771, 2772, 2789,
	2773, 2775, 2777, 2779, 2781, 2784, 2787,18958,21049, 21050, 21051, 21052, 21053, 21054, 
	2749, 2751, 2753, 2756, 2754, 2755, 18057, 17658, 18961,17654 ,10942, 10934,6853 }, "Silver NexArch Box"),
	
	GOLD_BOX(24,new int[] { 2768, 2769, 2770, 2771, 2772, 2789,2759, 2760, 2761, 2762, 2764,10942,
	2765, 2766, 2767, 2773, 2775, 2777, 2779, 2781, 2784, 2787,2749, 2751, 2753, 2756, 2754, 2755,
	19082, 19080, 19084, 21023, 21024, 21025, 21026, 21027, 21028, 18060, 1002,21056, 19085,  18066,18961, 18062,
	10935,18689 ,6854,18960} , "Gold NexArch Box" ),
	
	DIAMOND_BOX(25,new int[] { 19082, 19080, 19084, 21023, 21024, 21025, 21026, 21027, 21028, 10935, 18062,
	3495, 3505, 3506, 3507, 3508, 3509, 19040, 19041, 19042, 19043, 19044, 19046,
	19045, 19047, 10934, 3499, 3500, 3501, 3502, 3503, 3504, 3498, 18059, 3497, 21043,21047, 21045, 21044, 21042, 21041, 17656, 17662,
	21055 ,21056 ,18689,18063,13021,21056, 19085,18960,10943,1413,6854,18957}, "Diamond NexArch Box"),
	
	RUBY_BOX(26, new int[] { 13034, 8676, 8680, 17668, 17660, 10934, 13033, 13032, 8668, 8672, 8674, 9077, 17666, 13035, 10537, 10942, 18059,
	10942, 18981, 21055 ,18689,18980, 18066,13021, 21056,
	19005, 19016, 19004,18957, 10943,1413,18963},"Ruby NexArch Box"),
	
	AOECHEST(27, new int[]  { 19920, 20134, 20150, 20154, 20156, 20158, 20160, 20162,
			20106, 20108, 20110, 20112, 20114, 20116,
			7080, 20132, 20128, 18852, 18854, 18856, 18858, 18860, 18864, 18868,
			20120, 20122, 20124, 941, 94 },"Aoe Chest"),
	
	NULL(28, new int[] { },"");

	private int index;
	private String RewardName;
	private int item[];
	private int amount;
	
	public int getIndex() {
		return index;
	}

	public int[] getItemID() {
		return item;
	}

	public String getText() {
		return RewardName;
	}


	public int getAmount() {
		return amount;
	}


	RewardsData(int index, int[] item, String RewardName) {
		this.index = (index);
		this.item = (item);
		this.RewardName = (RewardName);
	}
	
	static final Map<Integer, RewardsData> byId = new HashMap<Integer, RewardsData>();
	
	static {
		for (RewardsData e : RewardsData.values()) {
			if (byId.put(e.getIndex(), e) != null) {
				  throw new IllegalArgumentException("duplicate id: " + e.getIndex());
			}
		}
	}
	
	public static RewardsData getById(int id) {
		if(byId.get(id) == null) {
			return byId.get(0);
		}
	    return byId.get(id);
	}
}